#!/usr/local/bin/ruby

require 'digest'
require 'json'
require 'erb'
require 'nokogiri'
require 'net/http'

inp = ''
inp += $stdin.read

payload = JSON.parse(inp.to_s)
dest_dir = ARGV[0]
review = nil

def get_reviews(app_name)
    uri = URI('https://play.google.com/store/getreviews?authuser=0')
    res = Net::HTTP.post_form(uri, 'reviewType' => '0', 'pageNum' => '0', 'id' => app_name, 'reviewSortOrder' => '0', 'xhr' => '1')

    response = res.body[6..-1]

    reviews = Array.new

    doc = Nokogiri::HTML(JSON.parse(response)[0][2])

    doc.css('.single-review').each do |node|
        review = {}
        review[:author] = node.at_css('.author-name').text.strip if node.at_css('.author-name')
        raw_tag = node.at_css('.current-rating').to_s
        if raw_tag.match(/100%;/i)
          review[:score] = 5
        elsif raw_tag.match(/80%;/i)
          review[:score] = 4
        elsif raw_tag.match(/60%;/i)
          review[:score] = 3
        elsif raw_tag.match(/40%;/i)
          review[:score] = 2
        elsif raw_tag.match(/20%;/i)
          review[:score] = 1
        end
        if node.at_css('.review-title')
          review[:title] = node.at_css('.review-title').text.strip
        end
        if node.at_css('.review-body')
          review[:text] = node.at_css('.review-body').text
            .sub!(review[:title],'')
            .sub!(node.at_css('.review-link').text, '')
            .strip
        end
        if review
          reviews << review
        end
    end
    return reviews
end

reviews = get_reviews(payload['source']['app_name'])

sha256 = Digest::SHA256.new

reviews.each do |x|
    ref = "#{x[:author]} - #{x[:score]} - #{sha256.hexdigest(x[:author]+x[:score].to_s+x[:title]+x[:text])}"
    if ref == payload['version']['ref']
        review = x
        break
    end
end

# write the json review file
File.open("#{dest_dir}/review.json", "w") do |f|
    f.write(review.to_json)
end

# write a slack message for slack resource
File.open("#{dest_dir}/slack.msg", "w") do |f|
    template = ERB.new(File.read("/opt/resource/slack.erb"))
    f.write template.result()
end


# setup and configure metadata
json_result = Hash.new
json_result["version"] = {"ref": payload['version']['ref']}
json_result["metadata"] = Array.new
json_result["metadata"].push({"name" => "author", "value" => review[:author]})
json_result["metadata"].push({"name" => "score", "value" => review[:score].to_s})
json_result["metadata"].push({"name" => "title", "value" => review[:title]})
json_result["metadata"].push({"name" => "text", "value" => review[:text]})

puts json_result.to_json
